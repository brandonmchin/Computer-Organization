Microsoft (R) Macro Assembler Version 10.00.30319.01	    04/15/15 20:56:48
<C:\Users\brandon\Documents\Systems Organization\Classwork\4  Page 1 - 1


				; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

					TITLE	C:\Users\brandon\Documents\Systems Organization\Classwork\4-13_Array_v_Pointer\ClearArrayPointer\ClearArrayPointer\clear_array_pointer.cpp
					.686P
					.XMM
					include listing.inc
			      C ;; LISTING.INC
			      C ;;
			      C ;; This file contains assembler macros and is included by the files created
			      C ;; with the -FA compiler switch to be assembled by MASM (Microsoft Macro
			      C ;; Assembler).
			      C ;;
			      C ;; Copyright (c) 1993-2003, Microsoft Corporation. All rights reserved.
			      C 
			      C ;; non destructive nops
			      C npad macro size
			      C if size eq 1
			      C   nop
			      C else
			      C  if size eq 2
			      C    mov edi, edi
			      C  else
			      C   if size eq 3
			      C     ; lea ecx, [ecx+00]
			      C     DB 8DH, 49H, 00H
			      C   else
			      C    if size eq 4
			      C      ; lea esp, [esp+00]
			      C      DB 8DH, 64H, 24H, 00H
			      C    else
			      C     if size eq 5
			      C       add eax, DWORD PTR 0
			      C     else
			      C      if size eq 6
			      C        ; lea ebx, [ebx+00000000]
			      C        DB 8DH, 9BH, 00H, 00H, 00H, 00H
			      C      else
			      C       if size eq 7
			      C 	; lea esp, [esp+00000000]
			      C 	DB 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H 
			      C       else
			      C        if size eq 8
			      C         ; jmp .+8; .npad 6
			      C 	DB 0EBH, 06H, 8DH, 9BH, 00H, 00H, 00H, 00H
			      C        else
			      C         if size eq 9
			      C          ; jmp .+9; .npad 7
			      C          DB 0EBH, 07H, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H
			      C         else
			      C          if size eq 10
			      C           ; jmp .+A; .npad 7; .npad 1
			      C           DB 0EBH, 08H, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 90H
			      C          else
			      C           if size eq 11
			      C            ; jmp .+B; .npad 7; .npad 2
			      C            DB 0EBH, 09H, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 8BH, 0FFH
			      C           else
			      C            if size eq 12
			      C             ; jmp .+C; .npad 7; .npad 3
			      C             DB 0EBH, 0AH, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 8DH, 49H, 00H
			      C            else
			      C             if size eq 13
			      C              ; jmp .+D; .npad 7; .npad 4
			      C              DB 0EBH, 0BH, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 8DH, 64H, 24H, 00H
			      C             else
			      C              if size eq 14
			      C               ; jmp .+E; .npad 7; .npad 5
			      C               DB 0EBH, 0CH, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 05H, 00H, 00H, 00H, 00H
			      C              else
			      C               if size eq 15
			      C                ; jmp .+F; .npad 7; .npad 6
			      C                DB 0EBH, 0DH, 8DH, 0A4H, 24H, 00H, 00H, 00H, 00H, 8DH, 9BH, 00H, 00H, 00H, 00H
			      C               else
			      C 	       %out error: unsupported npad size
			      C                .err
			      C               endif
			      C              endif
			      C             endif
			      C            endif
			      C           endif
			      C          endif
			      C         endif
			      C        endif
			      C       endif
			      C      endif
			      C     endif
			      C    endif
			      C   endif
			      C  endif
			      C endif
			      C endm
			      C 
			      C ;; destructive nops
			      C dpad macro size, reg
			      C if size eq 1
			      C   inc reg
			      C else
			      C   %out error: unsupported dpad size
			      C   .err
			      C endif
			      C endm
			      C 
					.model	flat

				INCLUDELIB MSVCRTD
				INCLUDELIB OLDNAMES

				PUBLIC	?clear_array_pointer@@YAXQAHH@Z			; clear_array_pointer
				EXTRN	__RTC_Shutdown:PROC
				EXTRN	__RTC_InitBase:PROC
				;	COMDAT rtc$TMZ
				; File c:\users\brandon\documents\systems organization\classwork\4-13_array_v_pointer\cleararraypointer\cleararraypointer\clear_array_pointer.cpp
 00000000			rtc$TMZ	SEGMENT
				;__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
 00000000			rtc$TMZ	ENDS
				;	COMDAT rtc$IMZ
 00000000			rtc$IMZ	SEGMENT
				;__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
				; Function compile flags: /Odtp /RTCsu /ZI
 00000000			rtc$IMZ	ENDS
				;	COMDAT ?clear_array_pointer@@YAXQAHH@Z
 00000000			_TEXT	SEGMENT
 = 00000008			_arr$ = 8						; size = 4
 = 0000000C			_size$ = 12						; size = 4
 00000000			?clear_array_pointer@@YAXQAHH@Z PROC			; clear_array_pointer, COMDAT

				; 4    : {

 00000000  55				push	ebp
 00000001  8B EC			mov	ebp, esp
 00000003  81 EC 000000CC		sub	esp, 204				; 000000ccH
 00000009  53				push	ebx
 0000000A  56				push	esi
 0000000B  57				push	edi
 0000000C  8D BD FFFFFF34		lea	edi, DWORD PTR [ebp-204]
 00000012  B9 00000033			mov	ecx, 51					; 00000033H
 00000017  B8 CCCCCCCC			mov	eax, -858993460				; ccccccccH
 0000001C  F3/ AB			rep stosd

				; 5    : 	for (int *p = &arr[0]; p < &arr[size]; p++)

 0000001E  8B 45 08			mov	eax, DWORD PTR _arr$[ebp]
 00000021  8B 5D 0C			mov ebx, DWORD PTR _size$[ebp]		; MODIFIED
 00000024  8D 14 98			lea edx, DWORD PTR [eax+ebx*4]		; MODIFIED
 00000027  EB 03			jmp	SHORT $LN3@clear_arra
 00000029			$LN2@clear_arra:
 00000029  83 C0 04			add	eax, 4
 0000002C			$LN3@clear_arra:
 0000002C  3B C2			cmp	eax, edx						; MODIFIED DWORD PTR _p$2537[ebp] to eax
 0000002E  73 08			jae	SHORT $LN4@clear_arra

				; 6    : 		*p = 0;

 00000030  C7 00 00000000		mov	DWORD PTR [eax], 0
 00000036  EB F1			jmp	SHORT $LN2@clear_arra
 00000038			$LN4@clear_arra:

				; 7    : }

 00000038  5F				pop	edi
 00000039  5E				pop	esi
 0000003A  5B				pop	ebx
 0000003B  8B E5			mov	esp, ebp
 0000003D  5D				pop	ebp
 0000003E  C3				ret	0
 0000003F			?clear_array_pointer@@YAXQAHH@Z ENDP			; clear_array_pointer
 0000003F			_TEXT	ENDS
				END
Microsoft (R) Macro Assembler Version 10.00.30319.01	    04/15/15 20:56:48
<C:\Users\brandon\Documents\Systems Organization\Classwork\4  Symbols 2 - 1




Macros:

                N a m e                 Type

dpad . . . . . . . . . . . . . .	Proc
npad . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000003F Para	  Public  'CODE'	
rtc$IMZ  . . . . . . . . . . . .	32 Bit	 00000000 	  Private 
rtc$TMZ  . . . . . . . . . . . .	32 Bit	 00000000 	  Private 


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

?clear_array_pointer@@YAXQAHH@Z 	P Near	 00000000 _TEXT	Length= 0000003F Public
  $LN2@clear_arra  . . . . . . .	L Near	 00000029 _TEXT	
  $LN3@clear_arra  . . . . . . .	L Near	 0000002C _TEXT	
  $LN4@clear_arra  . . . . . . .	L Near	 00000038 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
__RTC_InitBase . . . . . . . . .	L Near	 00000000 FLAT	External
__RTC_Shutdown . . . . . . . . .	L Near	 00000000 FLAT	External
_arr$  . . . . . . . . . . . . .	Number	 00000008h   
_size$ . . . . . . . . . . . . .	Number	 0000000Ch   

	   0 Warnings
	   0 Errors
